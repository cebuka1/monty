#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define STACK_SIZE 1000

int stack[STACK_SIZE];
int top = -1;

void push(int value, int line_number) {
    if (top == STACK_SIZE - 1) {
        fprintf(stderr, "Error at line %d: Stack overflow\n", line_number);
        exit(EXIT_FAILURE);
    }
    top++;
    stack[top] = value;
}

void pall() {
    if (top == -1) {
        return; // Stack is empty
    }
    for (int i = top; i >= 0; i--) {
        printf("%d\n", stack[i]);
    }
}

int main() {
    FILE *fp;
    char line[100];
    char opcode[10];
    int arg;

    fp = fopen("input.txt", "r");
    if (fp == NULL) {
        perror("Error opening file");
        return EXIT_FAILURE;
    }

    int line_number = 0;
    while (fgets(line, sizeof(line), fp)) {
        line_number++;
        if (sscanf(line, "%s %d", opcode, &arg) != 2) {
            if (strcmp(opcode, "pall") == 0) {
                pall();
            } else {
                fprintf(stderr, "Error at line %d: Invalid opcode or argument\n", line_number);
                return EXIT_FAILURE;
            }
        } else {
            if (strcmp(opcode, "push") != 0) {
                fprintf(stderr, "Error at line %d: Invalid opcode\n", line_number);
                return EXIT_FAILURE;
            }
            push(arg, line_number);
        }
    }

    fclose(fp);
    return 0;
}
